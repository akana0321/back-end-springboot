{"version":3,"file":"js/menu03.242b80cd.js","mappings":"spBAgCA,MAAMA,GAASC,EAAAA,EAAAA,IAAI,IAEnB,SAASC,IACPC,QAAQC,IAAI,mBAGd,SAASC,EAAWC,EAASC,GAC3BJ,QAAQC,IAAI,iCACZD,QAAQC,IAAI,YAAcE,GAC1BH,QAAQC,IAAIG,GACZJ,QAAQC,IAAIG,EAAMC,QAClBL,QAAQC,IAAIG,EAAME,MAGpB,SAASC,EAAYH,GACnBJ,QAAQC,IAAI,yBACZD,QAAQC,IAAIG,EAAMC,QAClBL,QAAQC,IAAIG,EAAMC,OAAOG,MACzBR,QAAQC,IAAIG,EAAMC,OAAOI,OACzBZ,EAAOY,MAAQL,EAAMC,OAAOI,MAG9B,SAASC,IACPV,QAAQC,IAAI,mBAGd,SAASU,IACPX,QAAQC,IAAI,mB,kwBCxDd,MAAMW,EAAc,EAEpB,S,2tBCqCA,MAAMf,GAASC,EAAAA,EAAAA,IAAI,IACbe,GAAUf,EAAAA,EAAAA,IAAI,CAClBU,KAAM,GACNM,QAAS,GACTC,MAAO,IAsCT,SAASC,IACPH,EAAQJ,MAAQ,CACdD,KAAM,GACNM,QAAS,GACTC,MAAO,G,OAtCXE,EAAAA,EAAAA,IAAMpB,GAAQ,CAACqB,EAAWC,KACxBnB,QAAQoB,MAAM,gBACdpB,QAAQC,IAAI,cAAgBiB,GAC5BlB,QAAQC,IAAI,cAAgBkB,GAC5BnB,QAAQqB,eAIVJ,EAAAA,EAAAA,IAAMJ,GAAS,CAACS,EAAYC,KAC1BvB,QAAQoB,MAAM,iBACdpB,QAAQC,IAAI,eAAiBqB,GAC7BtB,QAAQC,IAAI,eAAiBsB,GAC7BvB,QAAQqB,aAEV,CACEG,MAAM,KAIRP,EAAAA,EAAAA,KAAM,IAAMJ,EAAQJ,MAAMD,OAAM,CAACiB,EAASC,KACxC1B,QAAQoB,MAAM,6BACdpB,QAAQC,IAAI,YAAcwB,GAC1BzB,QAAQC,IAAI,YAAcyB,GAC1B1B,QAAQqB,eAIVJ,EAAAA,EAAAA,IAAM,CAACpB,EAAQgB,IAAU,EAAEK,EAAWC,IAAaG,EAAYC,MAC7DvB,QAAQoB,MAAM,0BACdpB,QAAQC,IAAI,QAAU,CAACiB,EAAWI,IAClCtB,QAAQC,IAAI,QAAU,CAACqB,EAAYC,IACnCvB,QAAQqB,aACP,CAACG,MAAM,I,+5BC/EV,MAAMZ,EAAc,EAEpB","sources":["webpack://front-end-vue/./src/views/menu03/Exam01EventHandling.vue","webpack://front-end-vue/./src/views/menu03/Exam01EventHandling.vue?efde","webpack://front-end-vue/./src/views/menu03/Exam02Watch.vue","webpack://front-end-vue/./src/views/menu03/Exam02Watch.vue?3b92"],"sourcesContent":["<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">Exam01EventHandling</div>\r\n\r\n    <div class=\"card-body\">\r\n      <h6>[Event Handling]</h6>\r\n      <button @click=\"handleBtn1\" class=\"btn btn-danger btn-sm mr-2\">버튼1</button>\r\n      <button @click=\"handleBtn2('vue is good', $event)\" class=\"btn btn-danger btn-sm mr-2\">버튼2</button>\r\n    </div>\r\n\r\n    <div>\r\n      <h6>[DOM Event 객체 참조]</h6>\r\n      <input type=\"text\" name=\"userId\" :value=\"userId\" @keyup=\"handleInput($event)\" />\r\n      <br />\r\n      입력 내용: {{ userId }}\r\n    </div>\r\n\r\n    <div>\r\n      <h6>[이벤트 수식어 사용]</h6>\r\n      <a href=\"https://vuejs.org/guide/introduction.html\" @click.prevent=\"handleLink\">링크</a>\r\n      <form action=\"https://vuejs.org/guide/introduction.html\" @submit.prevent=\"handleForm\">\r\n        <input type=\"text\" v-model=\"userId\" /> <br />\r\n        <input type=\"submit\" value=\"제출\" class=\"btn btn-success btn-sm mt-2\" />\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from \"vue\";\r\n\r\n// 반응형 속성 선언\r\nconst userId = ref(\"\");\r\n// 메소드 선언\r\nfunction handleBtn1() {\r\n  console.log(\"handleBtn1() 실행\");\r\n}\r\n\r\nfunction handleBtn2(message, event) {\r\n  console.log(\"handleBtn2(message, event) 실행\");\r\n  console.log(\"message: \" + message);\r\n  console.log(event);\r\n  console.log(event.target);\r\n  console.log(event.type);\r\n}\r\n\r\nfunction handleInput(event) {\r\n  console.log(\"handleInput(event) 실행\");\r\n  console.log(event.target);\r\n  console.log(event.target.name);\r\n  console.log(event.target.value);\r\n  userId.value = event.target.value; // 양방향 바인딩 효과\r\n}\r\n\r\nfunction handleLink() {\r\n  console.log(\"handleLink() 실행\");\r\n}\r\n\r\nfunction handleForm() {\r\n  console.log(\"handleForm() 실행\");\r\n}\r\n</script>\r\n\r\n<style scoped></style>\r\n","import script from \"./Exam01EventHandling.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Exam01EventHandling.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">\r\n      Exam02Watch\r\n    </div>\r\n    <div class=\"card-body\">\r\n      <div class=\"form-group row\">\r\n          <label class=\"col-sm-2 col-form-label\">UserId</label>\r\n          <div class=\"col-sm-10\">\r\n            <input type=\"text\" class=\"form-control\" v-model=\"userId\">\r\n          </div>\r\n      </div>\r\n      <hr/>\r\n      <form>      \r\n        <div class=\"form-group row\">\r\n          <label class=\"col-sm-2 col-form-label\">Name</label>\r\n          <div class=\"col-sm-10\">\r\n            <input type=\"text\" class=\"form-control\" v-model=\"product.name\">\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <label class=\"col-sm-2 col-form-label\">Company</label>\r\n          <div class=\"col-sm-10\">\r\n            <input type=\"text\" class=\"form-control\" v-model=\"product.company\">\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <label class=\"col-sm-2 col-form-label\">Price</label>\r\n          <div class=\"col-sm-10\">\r\n            <input type=\"number\" class=\"form-control\" v-model.number=\"product.price\">\r\n          </div>\r\n        </div>\r\n      </form> \r\n      <hr/>\r\n      <button @click=\"handleButton\" class=\"btn btn-info btn-sm\">product 객체 변경</button>     \r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, watch } from \"vue\";\r\n\r\nconst userId = ref(\"\");\r\nconst product = ref({\r\n  name: \"\",\r\n  company: \"\",\r\n  price: 0,\r\n});\r\n\r\n// 값 타입의 반응형 속성 감시 설정\r\nwatch(userId, (newUserId, oldUserId) => {\r\n  console.group(\"userId 변경 감시\");\r\n  console.log(\"newUserId: \" + newUserId);\r\n  console.log(\"oldUserId: \" + oldUserId);\r\n  console.groupEnd();\r\n});\r\n\r\n// 객체 타입의 반응형 속성 감시 설정\r\nwatch(product, (newProduct, oldProduct) => {\r\n  console.group(\"Product 변경 감시\");\r\n  console.log(\"newProduct: \" + newProduct);\r\n  console.log(\"oldProduct: \" + oldProduct);\r\n  console.groupEnd();\r\n},\r\n{\r\n  deep: true\r\n});\r\n\r\n// 객체 타입의 반응형 속성 일부 감시 설정\r\nwatch(() => product.value.name, (newName, oldName) => {\r\n  console.group(\"Product 객체의 name 속성 변경 감시\");\r\n  console.log(\"newName: \" + newName);\r\n  console.log(\"oldName: \" + oldName);\r\n  console.groupEnd();\r\n});\r\n\r\n// 멀티 반응형 속성 감시 설정\r\nwatch([userId, product], ([newUserId, oldUserId], [newProduct, oldProduct]) => {\r\n  console.group(\"User와 Product 멀티 변경 감시\");\r\n  console.log(\"new: \" + [newUserId, newProduct]);\r\n  console.log(\"old: \" + [newProduct, oldProduct]);\r\n  console.groupEnd();\r\n}, {deep: true})\r\n\r\nfunction handleButton() {\r\n  product.value = {\r\n    name: \"\",\r\n    company: \"\",\r\n    price: 0,\r\n  };\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","import script from \"./Exam02Watch.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Exam02Watch.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["userId","ref","handleBtn1","console","log","handleBtn2","message","event","target","type","handleInput","name","value","handleLink","handleForm","__exports__","product","company","price","handleButton","watch","newUserId","oldUserId","group","groupEnd","newProduct","oldProduct","deep","newName","oldName"],"sourceRoot":""}